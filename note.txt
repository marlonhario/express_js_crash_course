What is Express?
	- Express is fast, unopinionated and minimaist web framework for Node.js
	- Express is a "server-side" or "back-end" framework. It is not comparable
		to client-side frameworks like React, Angular & Vue. It can be used n combination 
		with those frameworks to build full stack applications


Why use express?
	- Makes building web applications with Node.js MUCH easier
	- Used for both server rendered apps as well as API/Microservices
	- Extremely light, fast and free
	- Full control of request and response
	- By far the most popular Node framework
	- Great to use with client frameworks as it's all JavaScript

What to know first
	- JavaScript Fundamentals (Objects, Arrays, Conditionals, etc)
	- Basic Node.js & NPM

	It may help to learn these first
		- HTTP Status Codes
		- JSON
		- High Order Array Methods - forEach, map, filter
		- Arrow Functions


Basic Server Syntax
	
	const express = requires('express');

	//Init express
	const app = express();

	//Create your endpoints/route handlers
	app.get('/', function(req, res) {
		res.send('Hello World');
	});

	//Listen on a port
	app.listen(5000);


Basic Route Handling
	- Handling requests/routes is simple
	- app.get(), app.post(), app.put(), app.delete(), etc
	- Access to params, query strings, url parts, etc
	- Express has a router so we can store routes in separate files and export
	- We can parse incoming data with the Body Parser

		app.get('/', function(req, res) {
			//Fetch from database
			//Load pages
			//Return JSON
			//Full access to request & response
		});


Express Middleware
	- Middleware functions are functions that have access to the request
	  and response object. Express has built in middleware but middleware
	  also comes from 3rd party packages as well as custom middleware

	  - Execute any code
	  - Make changes to the request/response objects
	  - End response cycle
	  - Call next middleware in the stack

create package json ========
	- npm init -y		


install express ==========
	- npm i express

run proj =======
	- node index

		then go to localhost:5000

install nodemon to keep update changes ===========
	- npm i -D nodemon

		: -D means dev dependencies it is for development not in production

to run project in dev =======
	- npm run dev		//to constantly watch the proj


postman get request / get all ============
	- http://localhost:5000/api/members

postman get single req =====
	- http://localhost:5000/api/members/2

install date fomatting =========
	- npm i moment

settings in post postman ======
	- header
		- key
			- Content-Type
		- value 
			- application/json

	- body 
		- raw	

		{
			"name": "Jake Smith",
			"email": "jake@gmail.com"
		}


setting a delete request in postman =====


install uuid to generate random id =======
	- npm i uuid

install templates in express ========
	- npm i express-handlebars

install bootstrap =========
	
	
22